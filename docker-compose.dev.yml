version: "3"

services:
  postgres:
    container_name: interapp-postgres
    image: postgres:alpine
    restart: on-failure
    ports:
      - 5432:5432
    command: postgres
    env_file:
      - ./interapp-backend/.env.development
    networks:
      - interapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5

  backend:
    container_name: interapp-backend
    restart: on-failure
    build:
      context: ./interapp-backend
      dockerfile: dev.Dockerfile
    develop:
      watch:
        - path: ./interapp-backend/api
          action: sync
          target: /app/api
        - path: ./interapp-backend/db
          action: sync
          target: /app/db
    env_file:
      - ./interapp-backend/.env.development
    ports:
      - 8000:8000
    networks:
      - interapp-network
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: interapp-frontend
    build:
      context: ./interapp-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./interapp-frontend/src:/app/src
    ports:
      - 3000:3000
    networks:
      - interapp-network
    depends_on:
      - backend
      - postgres

networks:
  interapp-network:
    driver: bridge
